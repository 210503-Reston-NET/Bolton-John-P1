@using Microsoft.AspNetCore.Mvc.Rendering
@model IEnumerable<OrderVM>
@{ var i = 0; }
@{ ViewData["Title"] = "View Orders"; }

<h1>View Orders</h1>

<form asp-action="ViewOrders">
    <div class="form-group">
        <input type="submit" name="sort" value="Sort By Cost" class="btn btn-info" id="submitId"/>
        <input type="submit" name="sort" value="Sort By Date Ascending" class="btn btn-info" id="submitId"/>
        <input type="submit" name="sort" value="Sort By Date Descending" class="btn btn-info" id="submitId"/>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.OrderID)
        </th>
        <th>
            @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.CustomerID)
        </th>
        <th>
            @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.LocationID)
        </th>
        <th>
            @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.Total)
        </th>
        <th>
            @HtmlHelperDisplayNameExtensions.DisplayNameFor(Html, model => model.OrderDate)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        var customerSelector = "customer" + i;
        var storeSelector = "location" + i;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderID)
            </td>
            <td>
                @ViewData[customerSelector]
            </td>
            <td>
                @ViewData[storeSelector]
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
        </tr>
    }
    </tbody>
</table>

<div>
    <a asp-controller="Customer" asp-action="List">Back to List</a>
</div>